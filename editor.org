* Introduction

This file contains all my basic editor preferences.

* Implementation
** Required Packages

#+name: requirements
#+begin_src emacs-lisp
(require-package '(solarized-theme dired+ fill-column-indicator diff-hl powerline))
(require 'whitespace)
(require 'diff-hl)
(require 'powerline)
#+end_src

** Settings

My cursor color should be grey.  For some reason when Emacs is started as a
server, it doesn't realize this, and sets it to this really dark, hard to see
color. [[http://stackoverflow.com/questions/8204316/cant-change-cursor-color-in-emacsclient][Found here.]]

#+begin_src emacs-lisp :tangle yes
(setq default-frame-alist '((cursor-color . "grey")))
#+end_src

Use the default "Powerline" theme for modeline.

#+begin_src emacs-lisp :tangle yes
(powerline-default-theme)
#+end_src

Highlight differences from current VC status.

#+begin_src emacs-lisp :tangle yes
(global-diff-hl-mode t)
#+end_src

Use windmove shortcuts (i.e. Shift arrow key) to switch windows.  Better than
C-x o, when I can remember.

#+begin_src emacs-lisp :tangle yes
(windmove-default-keybindings)
;; Make windmove work in org-mode:
(add-hook 'org-shiftup-final-hook 'windmove-up)
(add-hook 'org-shiftleft-final-hook 'windmove-left)
(add-hook 'org-shiftdown-final-hook 'windmove-down)
(add-hook 'org-shiftright-final-hook 'windmove-right)
#+end_src

I would like to have 80 character columns instead of the ridiculously cramped
default of 70.

#+name: init
#+begin_src emacs-lisp
;; Parapraph Reflowing
(setq-default fill-column 80)
#+end_src

I love the solarized dark theme, so that will be my theme.

#+name: init
#+begin_src emacs-lisp
;; Solarized Theme
(load-theme 'solarized-dark t)
#+end_src

Some of my whitespace preferences such as tab use, tab width, and trailing
whitespace.  Note that here, and in a few more places later on, I add a hook to
prog-mode instead of using the provided global modes.  This is because the
global modes will royally mess up buffers that aren't supposed to contain
programming-related text!  For example, in PDFView, if you have basically any
global mode running, the buffer will pretty much immediately lock up Emacs.

#+begin_src emacs-lisp :tangle yes
;; ONLY use spaces to indent things.  I like using spaces, but more importantly
;; is that I use consistency.  I think that emaacs shouldn't define TAB=8 spaces
;; and then when I indent by 10 spaces, do a tab and 2 spaces.  Use tabs or use
;; spaces, but use them consistently.
(setq-default indent-tabs-mode nil)
;; Display tabs as 4 spaces
(setq tab-width 4)

;; Whitespace mode -- highlight trailing whitespace, tabs, and parts of lines
;; longer than 80 characters.
(setq whitespace-style '(face trailing tabs))
(add-hook 'prog-mode-hook (lambda () (whitespace-mode t)))
(add-hook 'org-mode-hook (lambda () (whitespace-mode t)))
#+end_src

Show a rule line for the fill-column in each buffer.  I do want FCI in org mode.

#+begin_src emacs-lisp :tangle yes
(setq fci-rule-width 3)
(add-hook 'prog-mode-hook 'turn-on-fci-mode)
(add-hook 'org-mode-hook 'turn-on-fci-mode)
#+end_src

Enable line numbering in each buffer.  (I don't want this in org mode).

#+name: init
#+begin_src emacs-lisp
;; Line numbering on code buffers!!
(add-hook 'prog-mode-hook (lambda () (linum-mode t)))
#+end_src

Highlighting parenthesis and brackets that match.

#+name: init
#+begin_src emacs-lisp
;; Highlight matching parenthesis
(show-paren-mode 1) ; turn on the match highlighting
(setq show-paren-style 'parenthesis) ; highlight the whole bracketed expression
#+end_src

Backup options.

#+name: init
#+begin_src emacs-lisp
;; Make backups in central dir, not the same one as the original.
(setq backup-directory-alist `(("." . "~/.emacs.d/emacs-backup")))
#+end_src

Highlighting the current line

#+name: init
#+begin_src emacs-lisp
;; Always highlight the current line
(global-hl-line-mode 1)
#+end_src

Remove unnecessary UI elements.

#+name: init
#+begin_src emacs-lisp
;; I don't want a toolbar or scrollbars.  The menu bar can stay for now.
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode -1))
(setq inhibit-startup-message t)
#+end_src

Define a command to kill all buffers!

#+begin_src emacs-lisp :tangle yes
(defun kill-all-buffers ()
  (interactive)
  (mapc 'kill-buffer (buffer-list)))
#+end_src

Map C-x C-b to a nicer buffer list.

#+begin_src emacs-lisp :tangle yes
(global-set-key (kbd "C-x C-b") 'ibuffer)
#+end_src

Use the Monofur font.

#+begin_src emacs-lisp :tangle yes
  (add-to-list 'default-frame-alist
               '(font . "monofur-12"))
#+end_src
